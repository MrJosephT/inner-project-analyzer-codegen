{
    "Action CANCELLED=newAction(TYPE.CANCELLED,true),Action CONTINUE=newAction(TYPE.CONTINUE,true),Action CREATED=newAction(TYPE.CREATED,true),Action RESUME=newAction(TYPE.RESUME,true),Action SUSPEND=newAction(TYPE.SUSPEND,true),Action DESTROYED=newAction(TYPE.DESTROYED,true),Action SKIP_ATMOSPHEREHANDLER=newAction(TYPE.SKIP_ATMOSPHEREHANDLER),long timeout,TYPE type,boolean immutable": "Action.java",
    "Logger logger=LoggerFactory.getLogger(AtmosphereConfig.class),List<AtmosphereHandlerConfig> atmosphereHandlerConfig=newArrayList<>(),boolean supportSession,boolean sessionTimeoutRemovalAllowed,boolean throwExceptionOnCloned,AtmosphereFramework framework,Map<String,Object> properties=newConcurrentHashMap<>(),List<ShutdownHook> shutdownHooks=newArrayList<>(),List<StartupHook> startUpHook=newArrayList<>()": "AtmosphereConfig.java",
    "Logger logger=LoggerFactory.getLogger(AtmosphereResourceEventListenerAdapter.class)": "AtmosphereResourceEventListenerAdapter.java",
    "Logger logger=LoggerFactory.getLogger(AtmosphereResourceImpl.class),String PRE_SUSPEND=AtmosphereResourceImpl.class.getName()+\".preSuspend\",String SKIP_BROADCASTER_CREATION=AtmosphereResourceImpl.class.getName()+\".skipBroadcasterCreation\",String METEOR=Meteor.class.getName(),AtmosphereRequest req,AtmosphereResponse response,Action action=newAction(),List<Broadcaster> broadcasters=newCopyOnWriteArrayList<>(),Broadcaster broadcaster,AtmosphereConfig config,AsyncSupport<AtmosphereResourceImpl> asyncSupport,Serializer serializer,AtomicBoolean isInScope=newAtomicBoolean(true),AtmosphereResourceEventImpl event,AtomicBoolean isResumed=newAtomicBoolean(),AtomicBoolean isCancelled=newAtomicBoolean(),AtomicBoolean resumeOnBroadcast=newAtomicBoolean(),Object writeOnTimeout,boolean disableSuspend,AtomicBoolean disconnected=newAtomicBoolean(),ConcurrentLinkedQueue<AtmosphereResourceEventListener> listeners=newConcurrentLinkedQueue<>(),AtomicBoolean isSuspendEvent=newAtomicBoolean(),AtmosphereHandler atmosphereHandler,String uuid,HttpSession session,boolean disableSuspendEvent,TRANSPORT transport,boolean forceBinaryWrite,AtomicBoolean suspended=newAtomicBoolean(),WebSocket webSocket,AtomicBoolean inClosingPhase=newAtomicBoolean(),boolean closeOnCancel,AtomicBoolean isPendingClose=newAtomicBoolean()": "AtmosphereResourceImpl.java",
    "String method=\"GET\",Integer timeoutInSeconds=-1,Logger logger=LoggerFactory.getLogger(AtmosphereResourceLifecycleInterceptor.class),boolean force,long timeoutInMilli=-1": "AtmosphereResourceLifecycleInterceptor.java",
    "boolean RUNNING_TEST=false,boolean JDK_11_PLUS=false,Logger LOGGER=LoggerFactory.getLogger(Utils.class)": "Utils.java"
}