{
    "Get the current log level for logging purposes in the project.": "LogRecord.java LogLevel getLevel()",
    "Sets the log level for logging messages in the project.": "LogRecord.java void setLevel(LogLevel level)",
    "Determines if the severity level of a certain condition meets a certain threshold in the project.": "LogRecord.java boolean isSevereLevel()",
    "Check if an exception has been thrown and contains a non-empty message in the project.": "LogRecord.java boolean hasThrown()",
    "This function determines if an error is fatal based on severity level and if an exception has been thrown.": "LogRecord.java boolean isFatal()",
    "This function returns the category of an item within the project.": "LogRecord.java String getCategory()",
    "Sets the category of an item within the project, allowing for organization and classification.": "LogRecord.java void setCategory(String category)",
    "This function retrieves a message stored in a variable within the project.": "LogRecord.java String getMessage()",
    "Sets the message for a specific object within the project, allowing for communication and information storage.": "LogRecord.java void setMessage(String message)",
    "This function returns the sequence number within the project, used for tracking and identifying specific elements.": "LogRecord.java long getSequenceNumber()",
    "Sets the sequence number for a specific object in the project to track its order or position.": "LogRecord.java void setSequenceNumber(long number)",
    "This function returns the current value of milliseconds within the project's timing system.": "LogRecord.java long getMillis()",
    "This function sets the value of a variable representing milliseconds within a project.": "LogRecord.java void setMillis(long millis)",
    "This function returns the description of a thread within the project.": "LogRecord.java String getThreadDescription()",
    "This function sets the description of a thread in the project.": "LogRecord.java void setThreadDescription(String threadDescription)",
    "This function returns the stack trace of a thrown exception for debugging purposes in the project.": "LogRecord.java String getThrownStackTrace()",
    "Sets the thrown stack trace for error handling and debugging purposes in the project.": "LogRecord.java void setThrownStackTrace(String trace)",
    "This function returns the Throwable object that was thrown within the project for error handling.": "LogRecord.java Throwable getThrown()",
    "Set thrown exception and its stack trace for error handling and debugging in project.": "LogRecord.java void setThrown(Throwable thrown)",
    "Converts LogRecord object to a string for easy display and logging in the project.": "LogRecord.java String toString()",
    "This function retrieves the National Drug Code (NDC) from a class within the project.": "LogRecord.java String getNDC()",
    "Sets the National Drug Code (NDC) for a specific object within the project.": "LogRecord.java void setNDC(String ndc)",
    "This function returns the location of a specific object within the project.": "LogRecord.java String getLocation()",
    "Sets the location of an object within the project, allowing for easy tracking and organization.": "LogRecord.java void setLocation(String location)",
    "Resets the sequence number count to zero in the project to ensure accurate tracking of sequences.": "LogRecord.java void resetSequenceNumber()",
    "This function generates and returns the next unique ID for entities in the project.": "LogRecord.java long getNextId()",
    "Show log monitor frame with delay, allowing other threads to execute first.": "LogBrokerMonitor.java void show(final int delay)",
    "Returns the date format manager used for handling date formatting within the project.": "LogTable.java DateFormatManager getDateFormatManager()",
    "Sets the DateFormatManager object for managing date formats in the project.": "LogTable.java void setDateFormatManager(DateFormatManager dfm)",
    "Clears all log records in the log table within the project to maintain a clean and organized log.": "LogTable.java void clearLogRecords()",
    "This function retrieves the filtered log table model for displaying and analyzing log data in the project.": "LogTable.java FilteredLogTableModel getFilteredLogTableModel()",
    "This function sets the detailed view of a table by rearranging and resizing columns.": "LogTable.java void setDetailedView()",
    "This function sets the view of columns in a table based on selected columns, fixing a bug in Swing.": "LogTable.java void setView(List columns)",
    "Sets the font for a component and adjusts row height based on font metrics in a project.": "LogTable.java void setFont(Font font)",
    "Initialize table settings for single selection and row height in a project.": "LogTable.java void init()",
    "This function retrieves column names and their corresponding numbers from a dataset for project analysis.": "LogTable.java Vector getColumnNameAndNumber()",
    "Listens for selection changes in a table and displays detailed information in a text area.": "LogTable.java void valueChanged(ListSelectionEvent e)",
    "Returns the CategoryExplorerModel for accessing and navigating project categories.": "CategoryExplorerTree.java CategoryExplorerModel getExplorerModel()",
    "This function retrieves tooltip text for a GUI component, handling exceptions to prevent errors.": "CategoryExplorerTree.java String getToolTipText(MouseEvent e)",
    "Initialize JTree with custom renderers and editors for displaying and editing category nodes in a project.": "CategoryExplorerTree.java void init()",
    "Expand root node in tree view to show all categories, improving user navigation and visibility.": "CategoryExplorerTree.java void expandRootNode()",
    "Ensures root node expansion in tree model when new nodes are inserted, improving user experience in project.": "CategoryExplorerTree.java void ensureRootExpansion()",
    "Function expands root node when new nodes are inserted in the tree model.": "CategoryExplorerTree.java void treeNodesInserted(TreeModelEvent e)"
}