{
    "Function: Send alarm messages to Feishu webhooks based on settings.\nDescription: Groups messages, generates request body, and posts to webhooks.": "FeishuHookCallback.java void doAlarm(List<AlarmMessage> alarmMessages) throws Exception",
    "This function generates a request body for a Feishu webhook with optional encryption.": "FeishuHookCallback.java String getRequestBody(FeishuSettings.WebHookUrl webHookUrl, AlarmMessage alarmMessage, String textTemplate)",
    "Generate HMACSHA256 signature using timestamp and secret key for authentication and data integrity in project.": "FeishuHookCallback.java String sign(final Long timestamp, String secret) throws NoSuchAlgorithmException, InvalidKeyException",
    "Function role: Create a deep copy of a JsonObject.\n\nDescription: Ensures data integrity by duplicating JsonObject structure and values for project use.": "JsonObject.java JsonObject deepCopy()",
    "Function adds a property and its value to a JSON object within a project's data management system.": "JsonObject.java void add(String property, JsonElement value)",
    "This function removes a specified property from a JSON object within a project.": "JsonObject.java JsonElement remove(String property)",
    "Add a property with a value to a JSON object in a project.": "JsonObject.java void addProperty(String property, String value)",
    "Adds a property with a number value to a JSON object in a project.": "JsonObject.java void addProperty(String property, Number value)",
    "Function adds a property with a boolean value to a JSON object in a project.": "JsonObject.java void addProperty(String property, Boolean value)",
    "Add a property with a character value to a JSON object in a project.": "JsonObject.java void addProperty(String property, Character value)",
    "This function returns a set of key-value pairs representing the members of a JSON object in a project.": "JsonObject.java Set<Map.Entry<String, JsonElement>> entrySet()",
    "This function returns a set of keys from a map, used to access and manipulate data within the project.": "JsonObject.java Set<String> keySet()",
    "This function returns the size of a collection of members within the project.": "JsonObject.java int size()",
    "This function checks if the list of members is empty in the project.": "JsonObject.java boolean isEmpty()",
    "This function checks if a given member name exists in the project's list of members.": "JsonObject.java boolean has(String memberName)",
    "This function retrieves a JSON element by its member name within a project's context.": "JsonObject.java JsonElement get(String memberName)",
    "This function retrieves a JsonPrimitive value from a specified member within a project's JSON data.": "JsonObject.java JsonPrimitive getAsJsonPrimitive(String memberName)",
    "This function retrieves a JsonArray from a JsonObject based on a specified member name.": "JsonObject.java JsonArray getAsJsonArray(String memberName)",
    "This function retrieves a JsonObject from a collection based on a specified member name.": "JsonObject.java JsonObject getAsJsonObject(String memberName)",
    "Function: asMap()\nRole: Expose underlying map with non-null keys and values for project context.": "JsonObject.java Map<String, JsonElement> asMap()",
    "Function checks if object is equal to current JsonObject by comparing member objects.": "JsonObject.java boolean equals(Object o)",
    "This function calculates the hash code of a list of members within the project for identification purposes.": "JsonObject.java int hashCode()"
}