{
    "Subtracts specified number of days from a DateTime object within a project's date manipulation functionality.": "DateTime.java DateTime minusDays(int days)",
    "Parse text into DateTime object using specified parser and chronology, handling offset and time zone.": "DateTimeFormatter.java DateTime parseDateTime(String text)",
    "Calculate the number of days between two given dates in a project.": "Days.java Days daysBetween(ReadableInstant start, ReadableInstant end)",
    "This function retrieves the number of days from a value within the project.": "Days.java int getDays()",
    "Generates the latest write index name based on model type and current time bucket for data summarization.": "TimeSeriesUtils.java String latestWriteIndexName(Model model)",
    "Generate super dataset index names based on time range for data aggregation in project.": "TimeSeriesUtils.java String[] superDatasetIndexNames(String indexName, long startSecondTB, long endSecondTB)",
    "Generate index name based on table name, time point, step, and dataset type for data querying.": "TimeSeriesUtils.java String queryIndexName(String tableName,\n                                        long pointOfTB,\n                                        Step step,\n                                        boolean isRecord,\n                                        boolean isSuperDataSet)",
    "Generate index name based on model properties and time bucket for data summarization in database.": "TimeSeriesUtils.java String writeIndexName(Model model, long timeBucket)",
    "This function isolates and returns the timestamp from an Elasticsearch index name.": "TimeSeriesUtils.java long isolateTimeFromIndexName(String indexName)",
    "Compresses DateTime into a smaller time bucket based on dayStep for lower traffic optimization.": "TimeSeriesUtils.java long compressDateTime(DateTime time, int dayStep)"
}