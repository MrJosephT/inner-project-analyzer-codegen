{
    "This function allocates a new LinkedBuffer object with a default buffer size for use in the project.": "LinkedBuffer.java LinkedBuffer allocate()",
    "Allocate a LinkedBuffer of specified size, ensuring it meets minimum requirements for project functionality.": "LinkedBuffer.java LinkedBuffer allocate(int size)",
    "Allocate a new LinkedBuffer with a specified size and link it to the previous buffer in the project.": "LinkedBuffer.java LinkedBuffer allocate(int size, LinkedBuffer previous)",
    "This function creates a LinkedBuffer object from a specified byte array, offset, and length.": "LinkedBuffer.java LinkedBuffer wrap(byte[] array, int offset, int length)",
    "This function takes a byte array buffer and returns a LinkedBuffer object with an optional starting index.": "LinkedBuffer.java LinkedBuffer use(byte[] buffer)",
    "Creates a LinkedBuffer object from a byte array, ensuring it meets minimum size requirements.": "LinkedBuffer.java LinkedBuffer use(byte[] buffer, int start)",
    "Function writes data from linked buffer nodes to output stream, returning total content size.": "LinkedBuffer.java int writeTo(final OutputStream out, LinkedBuffer node) throws IOException",
    "Function writes data from linked buffer to output stream, calculating and returning total content size.": "LinkedBuffer.java int writeTo(final DataOutput out, LinkedBuffer node) throws IOException",
    "Resets the LinkedBuffer by clearing its contents and setting the offset back to the start position.": "LinkedBuffer.java LinkedBuffer clear()",
    "Converts an integer to bytes and stores them in a byte array at a specified offset.": "StringSerializer.java void putBytesFromInt(int i, final int offset, final int size, final byte[] buf)",
    "This function converts a long integer to bytes and stores them in a byte array.": "StringSerializer.java void putBytesFromLong(long i, final int offset, int size, final byte[] buf)",
    "This function calculates the size of a string based on the input integer within a project.": "StringSerializer.java int stringSize(int x)",
    "This function calculates the number of digits in a long integer, useful for formatting and processing large numbers.": "StringSerializer.java int stringSize(long x)",
    "Function writes integer values to a LinkedBuffer in a serialization project.": "StringSerializer.java LinkedBuffer writeInt(final int value, final WriteSession session,\n            LinkedBuffer lb)",
    "Function writes long value to LinkedBuffer in a WriteSession, ensuring efficient space usage.": "StringSerializer.java LinkedBuffer writeLong(final long value, final WriteSession session,\n            LinkedBuffer lb)",
    "This function writes a float value as ASCII to a LinkedBuffer within a project's serialization process.": "StringSerializer.java LinkedBuffer writeFloat(final float value, final WriteSession session,\n            final LinkedBuffer lb)",
    "Converts a double value to a string and writes it to a LinkedBuffer in a project.": "StringSerializer.java LinkedBuffer writeDouble(final double value, final WriteSession session,\n            final LinkedBuffer lb)",
    "This function calculates the size of a UTF-8 encoded string in a project.": "StringSerializer.java int computeUTF8Size(final CharSequence str, final int index, final int len)",
    "This function writes UTF-8 encoded characters to a buffer in a streaming mode for serialization.": "StringSerializer.java LinkedBuffer writeUTF8(final CharSequence str, int i, final int len,\n            byte[] buffer, int offset, int limit,\n            final WriteSession session, LinkedBuffer lb)",
    "This function writes UTF-8 encoded characters from a CharSequence into a LinkedBuffer in a serialization project.": "StringSerializer.java LinkedBuffer writeUTF8(final CharSequence str, int i, final int len,\n            final WriteSession session, final LinkedBuffer lb)",
    "Function role: Write ASCII characters from a CharSequence to a LinkedBuffer in a project.\n\nDescription: Appends ASCII characters to a buffer efficiently, handling buffer resizing if needed.": "StringSerializer.java LinkedBuffer writeAscii(final CharSequence str, final WriteSession session,\n            LinkedBuffer lb)",
    "Function writes a 2-byte integer to a byte array with specified endianness, used for data serialization.": "StringSerializer.java void writeFixed2ByteInt(final int value, final byte[] buffer, int offset,\n            final boolean littleEndian)",
    "Function writes a UTF-8 encoded string with fixed delimiter in a protocol buffer message.": "StringSerializer.java LinkedBuffer writeUTF8FixedDelimited(final CharSequence str,\n            final WriteSession session, LinkedBuffer lb)",
    "Function writes a UTF-8 string with fixed length delimiter in a protocol buffer serialization library.": "StringSerializer.java LinkedBuffer writeUTF8FixedDelimited(final CharSequence str,\n            final boolean littleEndian, final WriteSession session, LinkedBuffer lb)",
    "Function writes UTF-8 encoded string with length delimiter in a LinkedBuffer for serialization.": "StringSerializer.java LinkedBuffer writeUTF8OneByteDelimited(final CharSequence str, final int index,\n            final int len, final WriteSession session, LinkedBuffer lb)",
    "This function writes a UTF-8 encoded string with a variable-length prefix in a buffer.": "StringSerializer.java LinkedBuffer writeUTF8VarDelimited(final CharSequence str, final int index,\n            final int len, final int lowerLimit, int expectedSize,\n            final WriteSession session, LinkedBuffer lb)",
    "This function writes a UTF-8 encoded string with variable length delimiter in a serialization project.": "StringSerializer.java LinkedBuffer writeUTF8VarDelimited(final CharSequence str, final WriteSession session,\n            LinkedBuffer lb)",
    "This function deserializes a byte array into a string within a specified range.": "StringSerializer.java String deser(byte[] nonNullValue)",
    "This function deserializes byte arrays into strings, handling UTF-8 encoding and surrogate pairs for legacy data compatibility.": "StringSerializer.java String deser(byte[] nonNullValue, int offset, int len)",
    "Custom deserialization method that reads UTF data without falling back to old implementation in project.": "StringSerializer.java String deserCustomOnly(byte[] nonNullValue)",
    "This function serializes a non-null string value into a byte array using UTF-8 encoding.": "StringSerializer.java byte[] ser(String nonNullValue)",
    "This function reads UTF-encoded characters from a byte array and converts them to a String.": "StringSerializer.java String readUTF(byte[] buffer, int offset, int len) throws UTFDataFormatException",
    "This function calculates the high surrogate for a given Unicode code point within a larger project.": "StringSerializer.java char highSurrogate(int codePoint)",
    "This function generates a low surrogate character for a given Unicode code point in a project.": "StringSerializer.java char lowSurrogate(int codePoint)",
    "Flushes data from buffer to output stream in a write session within a project.": "WriteSession.java int flush(WriteSession session,\n                LinkedBuffer lb,\n                byte[] buf, int offset, int len) throws IOException",
    "Flushes data from buffer to output stream, handling overflow by writing remaining data to next buffer.": "WriteSession.java int flush(WriteSession session,\n                byte[] buf, int offset, int len,\n                byte[] next, int nextoffset, int nextlen) throws IOException",
    "Function resets project variables and states to initial values.": "WriteSession.java void reset()",
    "Clears all data in the current session, resetting it to an empty state.": "WriteSession.java WriteSession clear()",
    "This function returns the size of a data structure, providing information about the amount of data stored.": "WriteSession.java int getSize()",
    "This function converts a linked buffer to a byte array in a project.": "WriteSession.java byte[] toByteArray()",
    "Flushes data to output stream or custom handler in a project, handling data writing operations efficiently.": "WriteSession.java int flush(byte[] buf, int offset, int len) throws IOException",
    "Flushes data to output stream or custom handler in a project, handling buffer and next data.": "WriteSession.java int flush(byte[] buf, int offset, int len,\n            byte[] next, int nextoffset, int nextlen) throws IOException",
    "Flushes data from LinkedBuffer to output stream or custom handler, returning starting position in buffer.": "WriteSession.java int flush(LinkedBuffer lb,\n            byte[] buf, int offset, int len) throws IOException"
}