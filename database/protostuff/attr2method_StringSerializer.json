{
    "int MIN_BUFFER_SIZE=256,int DEFAULT_BUFFER_SIZE=512,byte[] buffer,int start,int offset,LinkedBuffer next": "LinkedBuffer.java",
    "int[] sizeTable=newint[]{9,99,999,9999,99999,999999,9999999,99999999,999999999,Integer.MAX_VALUE},char[] DigitTens={'0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','2','2','2','2','2','2','2','2','2','2','3','3','3','3','3','3','3','3','3','3','4','4','4','4','4','4','4','4','4','4','5','5','5','5','5','5','5','5','5','5','6','6','6','6','6','6','6','6','6','6','7','7','7','7','7','7','7','7','7','7','8','8','8','8','8','8','8','8','8','8','9','9','9','9','9','9','9','9','9','9',},char[] DigitOnes={'0','1','2','3','4','5','6','7','8','9','0','1','2','3','4','5','6','7','8','9','0','1','2','3','4','5','6','7','8','9','0','1','2','3','4','5','6','7','8','9','0','1','2','3','4','5','6','7','8','9','0','1','2','3','4','5','6','7','8','9','0','1','2','3','4','5','6','7','8','9','0','1','2','3','4','5','6','7','8','9','0','1','2','3','4','5','6','7','8','9','0','1','2','3','4','5','6','7','8','9',},char[] digits={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'},byte[] INT_MIN_VALUE=newbyte[]{(byte)'-',(byte)'2',(byte)'1',(byte)'4',(byte)'7',(byte)'4',(byte)'8',(byte)'3',(byte)'6',(byte)'4',(byte)'8'},byte[] LONG_MIN_VALUE=newbyte[]{(byte)'-',(byte)'9',(byte)'2',(byte)'2',(byte)'3',(byte)'3',(byte)'7',(byte)'2',(byte)'0',(byte)'3',(byte)'6',(byte)'8',(byte)'5',(byte)'4',(byte)'7',(byte)'7',(byte)'5',(byte)'8',(byte)'0',(byte)'8'},int TWO_BYTE_LOWER_LIMIT=1<<7,int ONE_BYTE_EXCLUSIVE=TWO_BYTE_LOWER_LIMIT/3+1,int THREE_BYTE_LOWER_LIMIT=1<<14,int TWO_BYTE_EXCLUSIVE=THREE_BYTE_LOWER_LIMIT/3+1,int FOUR_BYTE_LOWER_LIMIT=1<<21,int THREE_BYTE_EXCLUSIVE=FOUR_BYTE_LOWER_LIMIT/3+1,int FIVE_BYTE_LOWER_LIMIT=1<<28,int FOUR_BYTE_EXCLUSIVE=FIVE_BYTE_LOWER_LIMIT/3+1,boolean CESU8_COMPAT=Boolean.getBoolean(\"io.protostuff.cesu8_compat\")": "StringSerializer.java",
    "LinkedBuffer head,LinkedBuffer tail,int size=0,int nextBufferSize,OutputStream out,FlushHandler flushHandler,WriteSink sink": "WriteSession.java"
}