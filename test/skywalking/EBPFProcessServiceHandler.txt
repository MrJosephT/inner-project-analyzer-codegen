Convert process properties to the JsonObject.
1. Convert process properties to JsonObject:
- Extract process properties data
- Format data into JsonObject
- Return JsonObject with process properties

2. Decompose user requirements into 3 sub-requirements:
- Identify main user requirements
- Break down requirements into sub-requirements
- Define 3 specific sub-requirements for each main requirement
JsonObject.java void addProperty(String property, String value)
JsonObject.java Map<String, JsonElement> asMap()
JsonObject.java int hashCode()
JsonObject.java boolean has(String memberName)
JsonObject.java JsonPrimitive getAsJsonPrimitive(String memberName)
KeyStringValuePair.java
JsonObject.java
Function Header: JsonObject.java JsonObject convertProcessPropertiesToJson()

Description:
Convert process properties to a JsonObject by extracting and formatting data.

Reuse Functions or Entities:
- JsonObject.java void addProperty(String property, String value)
- JsonObject.java Map<String, JsonElement> asMap()
- JsonObject.java int hashCode()
- JsonObject.java boolean has(String memberName)
- JsonObject.java JsonPrimitive getAsJsonPrimitive(String memberName)
- KeyStringValuePair.java:String key,String value
- JsonObject.java:LinkedTreeMap<String,JsonElement> members=newLinkedTreeMap<>(false)

Parameters:
None

Return Value:
JsonObject: JsonObject containing process properties.
public JsonObject convertProcessPropertiesToJson() {
    JsonObject jsonObject = new JsonObject();
    
    // Extract and format data from process properties
    
    // Example:
    jsonObject.addProperty("property1", "value1");
    jsonObject.addProperty("property2", "value2");
    
    return jsonObject;
}----------------------------------------
public JsonObject convertProcessPropertiesToJson() {
    JsonObject jsonObject = new JsonObject();
    
    // Extract and format data from process properties
    
    // Example:
    jsonObject.addProperty("property1", getProperty1());
    jsonObject.addProperty("property2", getProperty2());
    
    return jsonObject;
}